{"version":3,"sources":["components/AddDriverForm/functional/ChooseFrontAndBack/ui/ChooseFrontAndBack.module.scss","components/AddDriverForm/functional/ChooseFrontAndBack/ui/ChooseFrontAndBackUI.jsx","components/AddDriverForm/functional/ChooseFrontAndBack/functional/ChooseFrontAndBackContainer.jsx","components/AddDriverForm/functional/RealNameInformationForm/ui/RealNameInformation.module.scss","components/AddDriverForm/functional/RealNameInformationForm/ui/RealNameInformationFormUI.jsx","components/AddDriverForm/functional/RealNameInformationForm/functional/RealNameInformationFormContainer.jsx"],"names":["module","exports","ChooseFrontAndBackUI","React","memo","isFront","handleBackOpen","handleFrontOpen","handleImageChange","isFrontChoosed","isBackChoosed","hasFrontError","hasBackError","className","styles","FileUploadWrapper","AddDriverFormButtonGroup","type","onClick","ChooseFileFieldContainer","onChange","ChooseFrontAndBackContainer","image","setImage","useState","setIsFront","useCallback","e","preventDefault","file","target","files","front","back","RealNameInformationFormUI","customStateChange","idTypeOptions","countries","Field","name","data-halfwidth","component","SelectFieldContainer","options","placeholder","validate","validators","required","TextFieldContainer","customOnChange","RealNameInformationFormContainer","setCurrentOnSubmit","setCurrentStep","useMemo","value","id","useSelector","getCountriesSelector","dispatch","useDispatch","onSubmit","formData","updateRealNameInformation","useEffect","getCities"],"mappings":"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","file":"static/js/5.ebc1a606.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"FileUploadWrapper\":\"ChooseFrontAndBack_FileUploadWrapper__2N39S\",\"AddDriverFormButtonGroup\":\"ChooseFrontAndBack_AddDriverFormButtonGroup__3ktW0\",\"AddDriverFormButtonGroup-Button\":\"ChooseFrontAndBack_AddDriverFormButtonGroup-Button__2Zfsw\",\"AddDriverFormButtonGroup-Button_blackBorder\":\"ChooseFrontAndBack_AddDriverFormButtonGroup-Button_blackBorder__kecTV\",\"AddDriverFormButtonGroup-Button_noBorder\":\"ChooseFrontAndBack_AddDriverFormButtonGroup-Button_noBorder__PBhpr\",\"AddDriverFormButtonGroup-Button_error\":\"ChooseFrontAndBack_AddDriverFormButtonGroup-Button_error__3Ec1i\"};","import React from 'react';\r\nimport {ChooseFileFieldContainer} from '../../../../common/inputs/ChooseFileField/functional/ChooseFileFieldContainer';\r\nimport styles from \"./ChooseFrontAndBack.module.scss\";\r\n\r\n\r\nexport const ChooseFrontAndBackUI = React.memo(({isFront, handleBackOpen,\r\n    handleFrontOpen, handleImageChange, isFrontChoosed, isBackChoosed,\r\n    hasFrontError, hasBackError}) => {\r\n    return (<div className={styles.FileUploadWrapper}>\r\n    <div className={styles.AddDriverFormButtonGroup}>\r\n        <button\r\n            type=\"button\"\r\n            onClick={handleFrontOpen}\r\n            className={`${styles['AddDriverFormButtonGroup-Button']} \r\n            ${isFront ? styles['AddDriverFormButtonGroup-Button_blackBorder'] : \r\n            styles['AddDriverFormButtonGroup-Button_noBorder']}\r\n            ${hasFrontError ? styles['AddDriverFormButtonGroup-Button_error'] : ''}`}>\r\n            Front {isFrontChoosed ? '(choosed)' : ''}\r\n        </button>\r\n\r\n        <button\r\n            type=\"button\"\r\n            onClick={handleBackOpen}\r\n            className={`${styles['AddDriverFormButtonGroup-Button']}\r\n            ${!isFront ? styles['AddDriverFormButtonGroup-Button_blackBorder']: styles['AddDriverFormButtonGroup-Button_noBorder']}\r\n            ${hasBackError ? styles['AddDriverFormButtonGroup-Button_error'] : ''}`}>\r\n            Back {isBackChoosed ? '(choosed)' : ''}\r\n        </button>\r\n    </div>\r\n    <ChooseFileFieldContainer  onChange={handleImageChange} />\r\n</div>);\r\n});\r\n","import React, {useState} from 'react';\r\nimport { ChooseFrontAndBackUI } from '../ui/ChooseFrontAndBackUI';\r\nimport { useCallback } from 'react';\r\n\r\nexport const ChooseFrontAndBackContainer = ({image, setImage}) => {\r\n    const [isFront, setIsFront] = useState(true);\r\n\r\n    const handleFrontOpen = useCallback(() => {\r\n        setIsFront(true);\r\n    }, []);\r\n\r\n    const handleBackOpen = useCallback(() => {\r\n        setIsFront(false);\r\n    }, []);\r\n\r\n    const handleImageChange = e => {\r\n        e.preventDefault();\r\n        let file = e.target.files[0];\r\n\r\n        if (isFront) {\r\n            setImage({...image, front: file, isFrontChoosed: true, hasFrontError: false});\r\n        } else {\r\n            setImage({...image, back: file, isBackChoosed: true, hasBackError: false})\r\n        }\r\n    }\r\n\r\n    return <ChooseFrontAndBackUI \r\n                isFront={isFront}\r\n                handleFrontOpen={handleFrontOpen}\r\n                handleBackOpen={handleBackOpen}\r\n                handleImageChange={handleImageChange}\r\n                isFrontChoosed={image.isFrontChoosed}\r\n                isBackChoosed={image.isBackChoosed}\r\n                hasFrontError={image.hasFrontError}\r\n                hasBackError={image.hasBackError}\r\n            />;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddDriver-Form\":\"RealNameInformation_AddDriver-Form__3S7Km\",\"AddDriverForm-FileUpload\":\"RealNameInformation_AddDriverForm-FileUpload__1ptKC\",\"RealNameInforamtionForm\":\"RealNameInformation_RealNameInforamtionForm__2bu6f\",\"RealNameInforamtionForm-Form\":\"RealNameInformation_RealNameInforamtionForm-Form__2jSVw\"};","import React from 'react';\r\nimport styles from './RealNameInformation.module.scss';\r\nimport { Field } from 'redux-form';\r\nimport { SelectFieldContainer } from '../../../../common/inputs/SelectField/functional/SelectFieldContainer';\r\nimport { TextFieldContainer } from '../../../../common/inputs/TextField/functional/TextFieldContainer';\r\nimport { ChooseFrontAndBackContainer } from '../../ChooseFrontAndBack/functional/ChooseFrontAndBackContainer';\r\nimport { validators } from '../../../../../utils/validators/validators';\r\n\r\n\r\nexport const RealNameInformationFormUI = React.memo(({\r\n    customStateChange, idTypeOptions, image, countries, setImage }) => {\r\n    return (<div className={styles[\"AddDriver-Form\"]}>\r\n        <div className='EvenInputs'>\r\n            <Field name=\"realNameIdType\"\r\n                data-halfwidth\r\n                component={SelectFieldContainer}\r\n                options={idTypeOptions}\r\n                placeholder=\"ID type\"\r\n                validate={[validators.required]}\r\n            />\r\n            <Field\r\n                data-halfwidth\r\n                name=\"realNameIdNo\"\r\n                component={TextFieldContainer}\r\n                placeholder=\"ID No.\"\r\n                validate={[validators.required]}\r\n\r\n            />\r\n        </div>\r\n        <div className='EvenInputs'>\r\n            <Field\r\n                data-halfwidth\r\n                name=\"realNameIssueDate\"\r\n                component={TextFieldContainer}\r\n                placeholder=\"Issue date\"\r\n                validate={[validators.required]}\r\n            />\r\n            <Field\r\n                data-halfwidth\r\n                name=\"realNameExpiryDate\"\r\n                component={TextFieldContainer}\r\n                placeholder=\"Expiry date\"\r\n                validate={[validators.required]}\r\n            />\r\n        </div>\r\n        <div className='EvenInputs'>\r\n            <Field\r\n                data-halfwidth\r\n                name=\"issuingCountry\"\r\n                placeholder=\"Issuing country\"\r\n                component={SelectFieldContainer}\r\n                customOnChange={customStateChange}\r\n                options={countries}\r\n                validate={[validators.required]}\r\n            />\r\n            <Field\r\n                data-halfwidth\r\n                name=\"issuingAuthority\"\r\n                placeholder=\"Issuing Authority\"\r\n                component={SelectFieldContainer}\r\n                options={countries}\r\n                validate={[validators.required]}\r\n            />\r\n        </div>\r\n        <span className={styles[\"AddDriverForm-FileUpload\"]}>Upload your National ID Card</span>\r\n        <ChooseFrontAndBackContainer\r\n            image={image}\r\n            setImage={setImage}\r\n        />\r\n    </div>);\r\n});\r\n","import React, { useMemo, useState } from 'react';\r\nimport { RealNameInformationFormUI } from '../ui/RealNameInformationFormUI';\r\nimport { useEffect } from 'react';\r\nimport { useCallback } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { getCountriesSelector } from '../../../../../redux/address/addressSelectors';\r\nimport { updateRealNameInformation } from '../../../../../redux/driver/driverActions';\r\nimport { useDispatch } from 'react-redux';\r\nimport {getCities} from \"../../../../../redux/address/addressActions\";\r\n\r\n\r\nexport const RealNameInformationFormContainer = ({ setCurrentOnSubmit, setCurrentStep }) => {\r\n    const idTypeOptions = useMemo(() => [{ value: 'PASSPORT', id: 'PASSPORT' }, { value: 'NATIONAL_ID', id: 'NATIONAL_ID' }], []);\r\n    const [image, setImage] = useState({});\r\n    const countries = useSelector(getCountriesSelector);\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = useCallback(formData => {\r\n        dispatch(updateRealNameInformation(formData, image, setImage, setCurrentStep, countries));\r\n    }, [image, setImage, setCurrentStep, countries, dispatch]);\r\n\r\n    useEffect(() => {\r\n        setCurrentOnSubmit(() => onSubmit);\r\n    }, [setCurrentOnSubmit, onSubmit]);\r\n    const customStateChange = useCallback((value) => {\r\n        dispatch(getCities(value));\r\n    }, [dispatch]);\r\n\r\n    return <RealNameInformationFormUI\r\n        idTypeOptions={idTypeOptions}\r\n        image={image}\r\n        setImage={setImage}\r\n        countries={countries}\r\n        customStateChange={customStateChange}\r\n    />;\r\n}\r\n"],"sourceRoot":""}